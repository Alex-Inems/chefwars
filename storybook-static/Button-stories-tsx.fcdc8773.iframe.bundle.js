"use strict";(self.webpackChunknewapp=self.webpackChunknewapp||[]).push([[853],{"./components/Button.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Disabled:()=>Disabled,LargeButton:()=>LargeButton,SmallButton:()=>SmallButton,WithHoverEffect:()=>WithHoverEffect,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Button_stories});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),next_image=__webpack_require__("./node_modules/@storybook/nextjs/dist/images/next-image.mjs");const Button=({title,leftIcon,rightIcon,handleClick,submitting,type="button",bgColor="bg-primary-purple",textColor="text-white",size="medium",hoverEffect=!1})=>{const sizeClasses="small"===size?"py-2 px-4 text-sm":"large"===size?"py-4 px-8 text-lg":"py-3 px-6 text-base",hoverClass=hoverEffect?"hover:bg-opacity-75 transition-all duration-300":"";return(0,jsx_runtime.jsxs)("button",{type,disabled:submitting,className:`flexCenter gap-3 rounded-xl font-medium max-md:w-full ${sizeClasses} ${bgColor} ${textColor} ${submitting?"bg-black/50":""} ${hoverClass}`,onClick:handleClick,children:[leftIcon&&(0,jsx_runtime.jsx)(next_image.A,{src:leftIcon,width:14,height:14,alt:"left icon"}),title,rightIcon&&(0,jsx_runtime.jsx)(next_image.A,{src:rightIcon,width:14,height:14,alt:"right icon"})]})},components_Button=Button;Button.__docgenInfo={description:"",methods:[],displayName:"Button",props:{title:{required:!0,tsType:{name:"string"},description:""},leftIcon:{required:!1,tsType:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}]},description:""},rightIcon:{required:!1,tsType:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}]},description:""},handleClick:{required:!1,tsType:{name:"MouseEventHandler"},description:""},submitting:{required:!1,tsType:{name:"union",raw:"boolean | false",elements:[{name:"boolean"},{name:"literal",value:"false"}]},description:""},type:{required:!1,tsType:{name:"union",raw:'"button" | "submit"',elements:[{name:"literal",value:'"button"'},{name:"literal",value:'"submit"'}]},description:"",defaultValue:{value:'"button"',computed:!1}},bgColor:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"bg-primary-purple"',computed:!1}},textColor:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"text-white"',computed:!1}},size:{required:!1,tsType:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}]},description:"",defaultValue:{value:'"medium"',computed:!1}},hoverEffect:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}}}};__webpack_require__("./node_modules/next/dist/compiled/react/index.js");const Button_stories={title:"Components/Button",component:components_Button,parameters:{layout:"centered"},tags:["autodocs"],argTypes:{title:{control:"text",description:"Text displayed inside the button"},leftIcon:{control:"text",description:"Path to the left icon"},rightIcon:{control:"text",description:"Path to the right icon"},bgColor:{control:"color",description:"Background color of the button"},textColor:{control:"color",description:"Text color of the button"},submitting:{control:"boolean",description:"Disables the button when true"},type:{control:{type:"select"},options:["button","submit"],description:"Type of the button"},size:{control:{type:"select"},options:["small","medium","large"],description:"Size of the button"},hoverEffect:{control:{type:"boolean"},description:"Applies a hover effect"},handleClick:{action:"clicked",description:"Handler for button click events"}}},Template=args=>(0,jsx_runtime.jsx)(components_Button,{...args}),Default=Template.bind({});Default.args={title:"Click Me",size:"medium",bgColor:"bg-primary-purple",textColor:"text-white",hoverEffect:!0};const SmallButton=Template.bind({});SmallButton.args={title:"Small Button",size:"small",bgColor:"#1e90ff"};const LargeButton=Template.bind({});LargeButton.args={title:"Large Button",size:"large",bgColor:"#32cd32"};const WithHoverEffect=Template.bind({});WithHoverEffect.args={title:"Hover Me",hoverEffect:!0,bgColor:"#ff6347",textColor:"#ffffff"};const Disabled=Template.bind({});Disabled.args={title:"Disabled",submitting:!0,size:"medium"};const __namedExportsOrder=["Default","SmallButton","LargeButton","WithHoverEffect","Disabled"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => <Button {...args} />",...Default.parameters?.docs?.source}}},SmallButton.parameters={...SmallButton.parameters,docs:{...SmallButton.parameters?.docs,source:{originalSource:"args => <Button {...args} />",...SmallButton.parameters?.docs?.source}}},LargeButton.parameters={...LargeButton.parameters,docs:{...LargeButton.parameters?.docs,source:{originalSource:"args => <Button {...args} />",...LargeButton.parameters?.docs?.source}}},WithHoverEffect.parameters={...WithHoverEffect.parameters,docs:{...WithHoverEffect.parameters?.docs,source:{originalSource:"args => <Button {...args} />",...WithHoverEffect.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"args => <Button {...args} />",...Disabled.parameters?.docs?.source}}}}}]);